#include <ros/ros.h>
#include <std_msgs/UInt16MultiArray>
#include <iostream>

//I2c Connection Libraries
#include <wiringPi.h>
#include <wiringPiI2C.h>

//Hex and CString conversion Libraries
#include <string>
#include <iomanip>
#include <sstream>

//Pull in UInt16 Var Type
#include <inttypes.h>

//Define Arduino Slave Address
#Define SLAVE_ADDRESS 0x04

//Create array to copy
unsigned int motor_v_copy[8];

//Create a CString Array to send
char data_stream[24];

void pwm_v_cb(const std_msgs::UInt16MultiArray& msg);

int main(int argc, char **argv)
{
    ros::init(argc, argv, "Microcontroller")
    ros::NodeHandle n;
    ros::Subscriber sub = n.subscribe("pwm_vals",1000,pwm_v_cb);
    ros::spinOnce();

    std::string pwm_v_string;
    std::stringstream ss;

    for(int i=0;i<8,i++)
    {
        //Convert individual integers to hex
        ss<<std::hex<<motor_v_copy[i];
        //Append hex strings to the to the string
        pwm_v_string.Append(ss);
        //Add delimiters
        if(j<8)
        {
            //Use delimiter '-'
            pwm_v_string.Append("-");
        }
    }

    //Convert the String to a string of chars
    data_stream=pwm_v_string;

    //Begin sending values over I2C stream
    for(intj=0;j<24;j++)
    {
        //write the value of that index to the Arduino
        wiringPiI2CWrite(SLAVE_ADDRESS, data_stream[j]);
    }

    return 0;

}


void pwm_v_cb(const std_msgs::UInt16MultiArray& msg)
{
    //Send all pwm values to copy array
    int i = 0;

    for(std::vector<int>::const_iterator it = array->data.begin(); it != array->data.end(); ++it)
    {
        motor_v_copy[i]=*it;
        i++;
    }
    return;
}